import { app, BrowserWindow, Menu } from "electron"
import { join } from "path"
import {
  enforceMacOSAppLocation,
  is,
  setContentSecurityPolicy,
} from "electron-util"

import Either from "@utils/either"
import { noOp } from "@utils/no-op"

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
Either.fromBoolean(require("electron-squirrel-startup")).fold(noOp, app.quit)

Either.fromBoolean(is.development)
  .bimap(
    () => `
script-src 'self' ordo-app;
img-src * data: file:;
style-src 'unsafe-inline', ordo-app data: file:;
font-src 'self', ordo-app file:;
connect-src 'self', ordo-app;
base-uri 'none';
frame-src https://www.youtube.com;
form-action 'none';
frame-ancestors 'none';
object-src 'none';
`,
    () => `img-src * data: file:; frame-src *;`
  )
  .fold(setContentSecurityPolicy, setContentSecurityPolicy)

const iconPath = join(__dirname, "src", "assets", "icons", "icon.png")

const createWindow = () => {
  // Create the browser window.
  const mainWindow = new BrowserWindow({
    show: false,
    height: 600,
    width: 800,
    icon: iconPath,
    titleBarStyle: "hiddenInset",
    acceptFirstMouse: true,
    webPreferences: {
      sandbox: true,
      webSecurity: true,
      spellcheck: false,
      enableWebSQL: false,
      defaultEncoding: "utf-8",
      contextIsolation: true,
      nodeIntegration: false,
      nodeIntegrationInSubFrames: false,
      nodeIntegrationInWorker: false,
      allowRunningInsecureContent: false,
      accessibleTitle: "Ordo",
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
  })

  const documentsPath = app.getPath("documents")
  const ordoPath = join(documentsPath, "Ordo")

  // TODO: Save files here!
  console.log(ordoPath)

  Menu.setApplicationMenu(Menu.buildFromTemplate([]))

  mainWindow.on("ready-to-show", mainWindow.show)

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY)
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on("ready", () => {
  enforceMacOSAppLocation()

  createWindow()
})

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on("window-all-closed", () =>
  Either.fromBoolean(process.platform !== "darwin").fold(noOp, app.quit)
)

app.on("activate", () =>
  Either.fromBoolean(BrowserWindow.getAllWindows().length === 0).fold(
    noOp,
    createWindow
  )
)

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
